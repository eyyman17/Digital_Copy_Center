Project Overview:
A Django-based web app designed to digitalize the copy center services at a school. The app will feature three user portals for professors, agents, and the school administration, each with distinct functionalities.

User Portals:
Professor Portal:

Functionality:
Submit a form specifying document details (e.g., type, number of copies, format, color, department).
View a history page displaying all submitted documents with their respective details.
Validate documents before printing.
Agent Portal:

Functionality:
Submit documents on behalf of professors (with email confirmation required from the professor).
View a list of all submitted documents, with buttons to download and validate the printing process.
Upon validation, the professor receives an email notification that the document is printed.
Administration Portal:

Functionality:
View a list of all submitted documents with details on who submitted them.
Manage a list of professors (add, remove, search).
Access a dashboard displaying printing statistics (e.g., total prints, prints by professor, time-based stats).
Core Features:
Authentication system: Email and password login for each user role.
Email notifications: For document validation and printing completion.
Dashboard for statistical insights.
Frontend: HTML, CSS, Bootstrap, JavaScript.
Backend: Django (Python).
Database: To be decided between PostgreSQL or MySQL.







here is a description for my project, I started writing it in django, and will use html css boostrap javascript for the front end.

It is a web app that serves digitalizing a copy center of my school.
I will explain it to you thouroughly,
First we have a login page.
There is 3 types of people that will be able to connect : the agent that works in the copy center, the administration of the school, and the professors that want to print documents.
Each one of these have their own portal that they get into after submitting their email and password.
The professors portal : 
they get a form to fill specifying if the document is for an exam, for a class, or just a document. the department they are in, the sector, number of copies, format, type, color, type of print, date and hour, and a button to submit the document. and a button to validate.
they also have a page where it shows all the history of the document submitted. 
where it shows all the details given for the documents.

The agent portal : 
he has a page where it contain the same form, in case a professor did not want to fill it themselves.
in this case, when he submits the document, it only goes through after the professor checks their email where they get a link to confirm.
the first page, is where all the submitted documents are, with a button to download the document, and a button to validate once he gets them printed. when he click to validate, an email goes through to the professor, to inform him that the document is printed.
and their is a log out button.

The administration portal :
it contains a page where there is a list of every submitted documents with the details, and who submitted it. 
it has a page where there is a list of the professors that have access to the platform, and able to search of them.
another page where it can add a professor to the database, or remove them.
and another page where it has a dashboard with graphs, showing how much we printed so far, how much each professor has printed and when....